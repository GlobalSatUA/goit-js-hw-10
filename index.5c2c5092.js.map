{"mappings":"+oBAAO,MAAMA,EAAkBC,GAGtBC,MAFU,uCAAuCD,oDAGrDE,MAAMC,IACL,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElB,MAAM,IAAIC,MAAM,2CAA2C,IAE5DJ,MAAMK,IACLA,EAAKC,SAASC,IAEZ,IAAKC,MAAMC,QAAQF,EAAQG,WAAY,CACrC,MAAMC,EAAY,GAClB,IAAK,MAAOC,EAAKC,KAAUC,OAAOC,QAAQR,EAAQG,WAChDC,EAAUK,KAAK,CAAElB,KAAMe,IAEzBN,EAAQG,UAAYC,C,CAGW,IAA7BJ,EAAQG,UAAUO,SACpBV,EAAQG,UAAY,CAAC,CAAEZ,KAAM,YAAY,IAGtCO,I","sources":["src/fetchCountries.js"],"sourcesContent":["export const fetchCountries = (name) => {\n  const BASE_URL = `https://restcountries.com/v3.1/name/${name}?fields=name,capital,population,flags,languages`;\n\n  return fetch(BASE_URL)\n    .then((response) => {\n      if (response.ok) {\n        return response.json();\n      }\n      throw new Error('Oops, there is no country with that name');\n    })\n    .then((data) => {\n      data.forEach((country) => {\n        \n        if (!Array.isArray(country.languages)) {\n          const langArray = [];\n          for (const [key, value] of Object.entries(country.languages)) {\n            langArray.push({ name: value });\n          }\n          country.languages = langArray;\n        }\n        \n        if (country.languages.length === 0) {\n          country.languages = [{ name: 'Unknown' }];\n        }\n      });\n      return data;\n    });\n};\n"],"names":["$c584ef0d490f0a58$export$1d1c4391ecac81e8","name","fetch","then","response","ok","json","Error","data","forEach","country","Array","isArray","languages","langArray","key","value","Object","entries","push","length"],"version":3,"file":"index.5c2c5092.js.map"}